version: '2'
services:
  graphql-db:
    image: mysql:5.6
    ports:
      - '3306:3306'
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_USER: adaptive_user
      MYSQL_PASSWORD: adaptive_pw
      MYSQL_DATABASE: adaptive_db
    volumes:
      - ./database-graphql/mysql:/var/lib/mysql
    restart: always
  graphql-api:
    build:
      context: ../graphql-api/.
    links:
      - graphql-db
      - kafka_server
    depends_on:
      - graphql-db
      - eeg-brainwave-api
      - kafka_server
    environment:
      DB_HOST: graphql-db
      DB_USERNAME: adaptive_user
      DB_PASSWORD: adaptive_pw
      DB_NAME: adaptive_db
      DB_PORT: 3306
      KAFKA_SERVER: kafka_server
      KAFKA_PORT: 9092
      KAFKA_TOPIC: eeg
      KAFKA_DEBUG: "false"
    ports:
      - "3000:3000"
    volumes:
      - ../graphql-api/server.js:/app/server.js
      - ../graphql-api/config:/app/config
      - ../graphql-api/data:/app/data
      - ../graphql-api/migrations:/app/migrations
      - ../graphql-api/models:/app/models
    command: npm run start
  eeg-db:
    image: mysql:5.6
    ports:
      - '3307:3307'
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_USER: adaptive_user
      MYSQL_PASSWORD: adaptive_pw
      MYSQL_DATABASE: adaptive_db
      MYSQL_TCP_PORT: 3307
      MYSQL_UNIX_PORT: 3307
    volumes:
      - ./database-eeg/mysql:/var/lib/mysql
    restart: always
  eeg-brainwave-api:
    build:
      context: ../eeg-brainwave-api/.
    links:
      - eeg-db
    depends_on:
      - eeg-db
    environment:
      DB_HOST: eeg-db
      DB_USERNAME: adaptive_user
      DB_PASSWORD: adaptive_pw
      DB_NAME: adaptive_db
      DB_PORT: 3307
      ENV: docker
      MODEL_PATH: /resources/model.bin
      DATABASE_UTILS_PATH: /resources/DatabaseUtils.props
      DEBUG_SECRET: adaptive_system
    ports:
      - "8080:8080" # For debugging
    volumes:
      - ../eeg-brainwave-api/src/main/resources/model.bin:/model/model.bin
  web:
    build:
      context: ../web-client/.
    links:
      - graphql-api
    depends_on:
      - graphql-api
    environment:
      PORT: '3000'
    ports:
      - "3001:3000"
    volumes:
      - ../web-client:/app
    command: npm run start

  kafka_server:
    image: "spotify/kafka:latest"
    container_name: kafka_server
    hostname: kafka_server
    ports:
      - 2181:2181
      - 9092:9092
    environment:
      ADVERTISED_HOST: kafka_server
      ADVERTISED_PORT: 9092
      AUTO_CREATE_TOPICS: "true"
    command: >
        bash -c
        "(sleep 15s &&
        /opt/kafka_2.11-0.10.1.0/bin/kafka-topics.sh
        --create
        --zookeeper
        localhost:2181 --replication-factor 1 --partitions 1
        --topic eeg &) && (supervisord -n)"
  kafka_manager:
    image: "mzagar/kafka-manager-docker:1.3.3.4"
    container_name: kafka_manager
    ports:
      - 9000:9000
    links:
      - kafka_server
    environment:
      ZK_HOSTS: "kafka_server:2181"
