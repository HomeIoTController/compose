version: '3'
services:
  graphql-db:
    image: danielmapar/mysql
    # image: mysql:5.6
    ports:
      - '3306:3306'
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        limits:
          cpus: "1"
          memory: 10000M
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_USER: adaptive_user
      MYSQL_PASSWORD: adaptive_pw
      MYSQL_DATABASE: adaptive_db
    #volumes:
    #  - ./database-graphql/mysql:/var/lib/mysql
    #  - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - webnet
  graphql-api:
    image: danielmapar/homecontroller_graphql-api
    build:
      context: ../graphql-api/.
    depends_on:
      - graphql-db
      - eeg-brainwave-api
      - kafka-broker
    environment:
      DB_HOST: graphql-db
      DB_USERNAME: adaptive_user
      DB_PASSWORD: adaptive_pw
      DB_NAME: adaptive_db
      DB_PORT: 3306
      EEG_API: eeg-brainwave-api
      EEG_API_PORT: 8080
      API_PORT: 3000
      DEFAULT_LISTENER_COMMAND: hello
      KAFKA_BROKER: kafka-broker
      KAFKA_PORT: 9092
      KAFKA_TOPIC: eeg
      KAFKA_DEBUG: "false"
    ports:
      - "3000:3000"
    volumes:
      - ../graphql-api/server.js:/app/server.js
      - ../graphql-api/config:/app/config
      - ../graphql-api/src:/app/src
      - ../graphql-api/migrations:/app/migrations
      - ../graphql-api/models:/app/models
    command: npm run start
    networks:
      - webnet
  eeg-db:
    image: danielmapar/mysql
    # image: mysql:8.0.13
    ports:
      - '3307:3307'
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        limits:
          cpus: "1"
          memory: 10000M
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_USER: adaptive_user
      MYSQL_PASSWORD: adaptive_pw
      MYSQL_DATABASE: adaptive_db
      MYSQL_TCP_PORT: 3307
      MYSQL_UNIX_PORT: 3307
    #volumes:
      #- ./database-eeg/mysql:/var/lib/mysql
      #- ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - webnet
  eeg-brainwave-api:
    image: danielmapar/homecontroller_eeg-brainwave-api
    build:
      context: ../eeg-brainwave-api/.
    depends_on:
      - eeg-db
    environment:
      DB_HOST: eeg-db
      DB_USERNAME: adaptive_user
      DB_PASSWORD: adaptive_pw
      DB_NAME: adaptive_db
      DB_PORT: 3307
      KAFKA_BROKER: kafka-broker
      KAFKA_PORT: 9092
      KAFKA_TOPIC: eeg
      KAFKA_DEBUG: "false"
      MODELS_PATH: /resources/classifiers
      DATABASE_UTILS_PATH: /resources/DatabaseUtils.props
      DEBUG_SECRET: adaptive_system
    ports:
      - "8085:8080" # For debugging using IntelliJ
    volumes:
      - ../eeg-brainwave-api/src/main/resources/DatabaseUtils.props:/resources/DatabaseUtils.props
      - ./classifiers:/resources/classifiers/
    networks:
      - webnet
  web-client:
    image: danielmapar/homecontroller_web-client
    build:
      context: ../web-client/.
    depends_on:
      - graphql-api
    environment:
      PORT: '3000'
      REACT_APP_GRAPHQL_API_URL: http://localhost:3000/graphql
    ports:
      - "3001:3000"
    volumes:
      - ../web-client/public:/app/public
      - ../web-client/src:/app/src
    command: npm run start
    networks:
      - webnet
  container-visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "9001:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet

networks:
  webnet:
